name: Build & Deploy to Dev Server

on:
  push:
    branches:
      - main  # dev 브랜치 푸시 시 자동 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Check key size
        run: echo "${{ secrets.DEV_SERVER_SSH_KEY }}" | wc -c

    # 4. Decode SSH Key (from base64 to private_key.pem)
      - name: Decode SSH Key
        run: |
          printf '%s' "${{ secrets.DEV_SERVER_SSH_KEY }}" | base64 -d > private_key.pem
          chmod 600 private_key.pem
      
      - name: Show PEM key head
        run: head -n 5 private_key.pem

      - name: Check if private key exists
        run: ls -al private_key.pem

      # 5. Copy JAR to EC2
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ec2-user
          key_path: ./private_key.pem
          port: 22
          source: spring/libs/*-SNAPSHOT.jar
          target: /home/ec2-user/app/

      # 6. Restart Spring Boot on EC2
      - name: Restart Spring Boot App
        uses: appleboy/ssh-action@v1.0.0
        continue-on-error: true
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ec2-user
          key_path: ./private_key.pem
          port: 22
          script: |
            pkill -f 'java -jar' || true
            nohup java -jar /home/ec2-user/app/spring/libs/*.jar > /home/ec2-user/app/app.log 2>&1 &
